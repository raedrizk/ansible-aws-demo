---
# tasks file for aws_provision_ec2

- name: Provision EC2 instance(s)
  amazon.aws.ec2_instance:
    region: "{{ aws_region }}"
    instance_type: "{{ ec2_instance_type }}"
    image_id: "{{ ec2_ami_id }}"
    key_name: "{{ ec2_keypair_name }}"
    network:
      assign_public_ip: true
      subnet_id: "{{ ec2_subnet_id }}"
      groups: 
      - "{{ ec2_security_group }}"
      delete_on_termination: true
    volumes:
      - device_name: /dev/sda1
        volume_type: gp2
        volume_size: "{{ ec2_volume_size }}"
        delete_on_termination: true
    user_data: "{{ lookup('template', ec2_userdata_template_file_name) }}"
    exact_count: "{{ ec2_instance_count }}"
    tags:
      tag:Name: "{{ ec2_name_tag }}"
      tag:Provisioner: "{{ provisioner_tag }}"
      tag:Created: "{{ created_tag }}"
    filters: 
      Name: "{{ ec2_name_tag }}"
      Provisioner: "{{ provisioner_tag }}"
      Created: "{{ created_tag }}"
    wait: yes
  register: ec2

- name: Wait for connection to come up
  wait_for: 
    host: "{{ item.public_ip }}" 
    port: "{{ wait_for_port }}" 
    state: started
    timeout: 3600
  with_items: "{{ ec2.instances }}"
  when: ec2.instances is defined

- name: Wait for connection to come up
  wait_for: 
    host: "{{ item.public_ip }}" 
    port: "{{ wait_for_port }}" 
    state: started
    timeout: 3600
  with_items: "{{ ec2.tagged_instances }}"
  when: ec2.tagged_instances is defined

- name: Setting stats for future tasks
  ansible.builtin.set_stats:
    data:
      stat_created_ec2: "{{ ec2 }}"
  when: ec2 is defined

- name: Setting facts for future tasks
  ansible.builtin.set_fact:
    stat_created_ec2: "{{ ec2 }}"
  when: ec2 is defined